- hosts: db
  become: yes
  vars:
    db_name: "backenddb"
    db_user: "backenduser"
    db_password: "backendpass123"

  tasks:
    - name: Install PostgreSQL server and client
      dnf:
        name:
          - postgresql15
          - postgresql15-server
        state: present

    - name: Initialize PostgreSQL database
      command: /usr/bin/postgresql-setup --initdb
      args:
        creates: /var/lib/pgsql/data/postgresql.conf

    - name: Enable and start PostgreSQL
      systemd:
        name: postgresql
        enabled: yes
        state: started

    - name: Configure pg_hba.conf for password authentication
      lineinfile:
        path: /var/lib/pgsql/data/pg_hba.conf
        line: "host    {{ db_name }}    {{ db_user }}    0.0.0.0/0    md5"
        insertafter: "^# IPv4 local connections:"
      notify: Restart PostgreSQL

    - name: Ensure PostgreSQL listens on all addresses
      lineinfile:
        path: /var/lib/pgsql/data/postgresql.conf
        regexp: '^#?listen_addresses =.*'
        line: "listen_addresses = '*'"
      notify: Restart PostgreSQL

    - name: Create database
      community.postgresql.postgresql_db:
        name: "{{ db_name }}"
        state: present
        login_host: "127.0.0.1"
        login_user: postgres
        login_password: "postgres123"

    - name: Create database user
      community.postgresql.postgresql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        db: "{{ db_name }}"
        priv: "ALL"
        state: present
        login_host: "127.0.0.1"
        login_user: postgres
        login_password: "postgres123"

    - name: Grant privileges on schema public
      community.postgresql.postgresql_query:
        db: "{{ db_name }}"
        login_user: postgres
        login_password: "postgres123"
        login_host: "127.0.0.1"
        query: |
          GRANT ALL ON SCHEMA public TO {{ db_user }};
          ALTER DEFAULT PRIVILEGES IN SCHEMA public
          GRANT ALL ON TABLES TO {{ db_user }};

    - name: Create users table
      community.postgresql.postgresql_query:
        db: "{{ db_name }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        query: |
          CREATE TABLE IF NOT EXISTS users (
            id SERIAL PRIMARY KEY,
            username VARCHAR(50) NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          )

  handlers:
    - name: Restart PostgreSQL
      systemd:
        name: postgresql
        state: restarted
