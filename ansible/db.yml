---
- name: Setup Database Server
  hosts: db
  become: yes

  vars:
    db_name: backenddb
    db_user: backenduser
    db_password: backendpass123
    postgres_version: 15

  tasks:
    - name: Install required tools
      ansible.builtin.yum:
        name:
          - wget
          - gnupg2
        state: present

    - name: Add PostgreSQL official repo
      ansible.builtin.yum_repository:
        name: pgdg
        description: PostgreSQL {{ postgres_version }} repo
        baseurl: https://download.postgresql.org/pub/repos/yum/{{ postgres_version }}/redhat/rhel-$releasever-$basearch
        gpgcheck: yes
        enabled: yes
        gpgkey: https://download.postgresql.org/pub/repos/yum/RPM-GPG-KEY-PGDG

    - name: Disable default PostgreSQL module
      ansible.builtin.command: dnf -qy module disable postgresql
      ignore_errors: yes

    - name: Install PostgreSQL server and client
      ansible.builtin.yum:
        name:
          - postgresql{{ postgres_version }}-server
          - postgresql{{ postgres_version }}
        state: present

    - name: Initialize PostgreSQL database
      ansible.builtin.command: /usr/pgsql-{{ postgres_version }}/bin/postgresql-setup initdb
      args:
        creates: /var/lib/pgsql/{{ postgres_version }}/data/PG_VERSION

    - name: Enable and start PostgreSQL service
      ansible.builtin.service:
        name: postgresql-{{ postgres_version }}
        state: started
        enabled: yes

    - name: Set PostgreSQL password for postgres user
      ansible.builtin.postgresql_user:
        name: postgres
        password: "{{ db_password }}"
        login_user: postgres

    - name: Create backend database
      ansible.builtin.postgresql_db:
        name: "{{ db_name }}"
        login_user: postgres

    - name: Create backend user
      ansible.builtin.postgresql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        db: "{{ db_name }}"
        priv: "ALL"
        login_user: postgres
